# Copyright (c) Markus Falb <markus.falb@mafalb.at>
# GNU General Public License v3.0+
# see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt
---

name: CI
on:  # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      targeted_branch:
        type: string

jobs:

  selectbranch:
    uses: mafalb/workflows/.github/workflows/reusable-selectbranch.yml@prod
    with:
      targeted_branch: ${{ inputs.targeted_branch }}

  ansiblecollection:
    needs: selectbranch
    uses: mafalb/workflows/.github/workflows/reusable-ansiblecollection.yml@prod
    with:
      targeted_branch: ${{ needs.selectbranch.outputs.ref }}

  epel:
    needs: selectbranch
    strategy:
      fail-fast: false
      matrix:
        target:
          - centos7
          - c8s
          - c9s
          - alma8
          - alma9
          - rocky8
          - rocky9

    uses: mafalb/workflows/.github/workflows/reusable-molecule.yml@prod
    name: molecule ${{ matrix.target }}
    with:
      name: epel
      target: ${{ matrix.target }}
      scenarios: "default, epel-next, epel-absent"
      targeted_branch: ${{ needs.selectbranch.outputs.ref }}

  tlp:
    needs: selectbranch
    strategy:
      fail-fast: false
      matrix:
        target:
          - fedora38
          - fedora39
          - fedora40
          - c8s
          - c9s
          - centos7
          - alma8
          - alma9
          - rocky8
          - rocky9
          - debian11
          - debian12
          - ubuntu20
          - ubuntu22
          - ubuntu24

    uses: mafalb/workflows/.github/workflows/reusable-molecule.yml@dev
    name: molecule ${{ matrix.target }}
    with:
      name: tlp
      target: ${{ matrix.target }}
      scenarios: "tlp"
      targeted_branch: ${{ needs.selectbranch.outputs.ref }}

  allsuccess:
    if: success() || failure()
    uses: mafalb/workflows/.github/workflows/reusable-allsuccess.yml@prod
    with:
      joblist: ${{ toJSON(needs) }}
    needs:
      - selectbranch
      - ansiblecollection
      - epel
      - tlp
...
